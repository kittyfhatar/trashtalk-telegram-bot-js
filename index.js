// CHAT VERSION TRASHTALK V1
const TelegramBot = require('node-telegram-bot-api')
const debug = require('./helpers.js')
const token = '5963467911:AAHVC9_xiIEFRjKszAyALquENbvfnLIaLQk'
const bot = new TelegramBot(token, { polling: true })
const fs = require('fs'); // File System


bot.setMyCommands([
    { command: '/start', description: '–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–∞ –ø—Ä–æ –±–æ—Ç–∞' },
    { command: '/about', description: '–ü–†–û–ß–ò–¢–ê–ô/READ' },
    { command: '/trashtalkru', description: 'Trash' },
    { command: '/trashtalkeng', description: 'TrashENG' },
    { command: '/donate', description: 'Donate to coder' }
])


bot.onText(/\/start/, async(msg) => {
    const chatId = msg.chat.id;
    await bot.sendMessage(chatId, "üîî <b>–í—ã–∑—ã–≤–∞—é –º–µ–Ω—é...</b>", { parse_mode: "HTML" })
        // await bot.sendMessage(chatId, "**",)
    await bot.sendMessage(chatId, "*üëã –ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ—Ç –±–æ—Ç —Å–¥–µ–ª–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ –±—ã —Ç—ã –Ω–µ –∫–∞–∑–∞–ª—Å—è –Ω–∏—â–∏–º –≤ –≥–ª–∞–∑–∞—Ö —Å–≤–æ–∏—Ö –≤—Ä–∞–≥–æ–≤\n\nüë®‚Äçüíª–ü—Ä–æ–ø–∏—à–∏ /trashtalkru –∏–ª–∏  /trashtalkeng —á—Ç–æ –±—ã —É—Ä—ã—Ç—å —Å–æ–ø–µ—Ä–Ω–∏–∫–∞\n\n‚úâÔ∏è –ö–∏–Ω—É—Ç—å —Å–≤–æ–π —Ç—Ä–µ—à—Ç–æ–ª–∫ –ª–∏—Å—Ç –º–æ–∂–µ—à—å –º–Ω–µ –≤ –ª—Å @doxmedoxmedoxme*", {
        parse_mode: "MarkdownV2",
        reply_markup: {
            inline_keyboard: [
                [{
                    text: "üë∑‚Äç‚ôÇÔ∏è –ö–æ–¥–µ—Ä",
                    url: 'tg://user?id=5305307232'
                }]
            ]
        }
    })
});


bot.onText(/\/menu/, async(msg) => {
    const chatId = msg.chat.id;
    await bot.sendMessage(chatId, "üîî <b>–í—ã–∑—ã–≤–∞—é –º–µ–Ω—é...</b>", { parse_mode: "HTML" })
});

bot.onText(/\/trashtalkru/, (message) => {
    const text = fs.readFileSync('trash.txt', 'utf8');
    const strings = text.split('\n');
    const randomString = strings[Math.floor(Math.random() * strings.length)];
    bot.sendMessage(message.chat.id, "`" + randomString + "`", {
        parse_mode: "MarkdownV2",
        reply_markup: {
            inline_keyboard: [
                [{
                    text: "üë∑‚Äç‚ôÇÔ∏è –ö–æ–¥–µ—Ä",
                    url: 'tg://user?id=5305307232'
                }]
            ]
        }
    })
});



bot.onText(/\/trashtalkeng/, (message) => {

    const text = fs.readFileSync('trasheng.txt', 'utf8');
    const strings = text.split('\n');
    const randomString1 = strings[Math.floor(Math.random() * strings.length)];

    bot.sendMessage(message.chat.id, "`" + randomString1 + "`", {
        parse_mode: "MarkdownV2",
        reply_markup: {
            inline_keyboard: [
                [{
                    text: "üë∑‚Äç‚ôÇÔ∏è –ö–æ–¥–µ—Ä",
                    url: 'tg://user?id=5305307232'
                }]
            ]
        }
    })
});

bot.onText(/\/test/, (msg) => {
    const user_id = msg.from.id;
    const username = msg.from.username;
    // console.log(`–¢–≤–æ–π TG ID: ${user_id}`);
    // console.log(`–¢–≤–æ–π —é–∑–µ—Ä–Ω–µ–π–º: @${username}`);
    try {
        bot.sendMessage(user_id, `üÜî <b>–¢–≤–æ–π ID:</b> <code>${user_id}</code>\nüßæ <b>–¢–≤–æ–π —é–∑–µ—Ä–Ω–µ–π–º:</b> <code>${username}</code>`, { parse_mode: "HTML" });
    } catch (err) {
        console.error(err);

    }
});

bot.onText(/\/donate/, async(msg, match) => {
    const text = msg.text;
    const username = msg.from.username;
    const chatId = msg.chat.id;
    await bot.sendMessage(chatId, "\n`0xd4161a3FFa35C0BF4d525BED3c94cAe0e6f851f2` USDT", {
        parse_mode: "MarkdownV2",
        reply_markup: {
            inline_keyboard: [
                [{
                    text: "üë∑‚Äç‚ôÇÔ∏è –ö–æ–¥–µ—Ä",
                    url: 'tg://user?id=5305307232'
                }]
            ]
        }
    })

});

bot.onText(/\/about/, async(msg) => {
    const chatId = msg.chat.id;
    bot.sendMessage(chatId, "<b>üíé –ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –±–æ—Ç–∞. \n\n‚ùì –ë–æ—Ç —Å–¥–µ–ª–∞–Ω –∑–∞ –ø–∞—Ä—É —á–∞—Å–æ–≤(—è —Å—Ä–∞–ª) –Ω–∞—á–∏–Ω–∞—é—â–∏–º Node.js –¥–µ–≤–µ–ª–æ–ø–µ—Ä–æ–º, —Å–¥–µ–ª–∞–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–≤–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –∫–æ–¥–µ 119 —Å—Ç—Ä–æ–∫. \n\nüå† –ë–æ—Ç –º–æ–∂–µ—Ç –∫–æ–º—É-—Ç–æ –ø–æ–º–æ—á—å –ø–µ—Ä–µ—Å–ø–æ—Ä–∏—Ç—å –æ–ø–æ–Ω–µ–Ω—Ç–∞. –≠—Ç–∞ –≤–µ—Ä—Å–∏—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –≤ —á–∞—Ç–∞—Ö/–≥—Ä—É–ø–ø–∞—Ö, –ø—Ä–æ—Å—å–±–∞ –Ω–∞–ø–∏—Å–∞—Ç—å —á—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å –≤ –±–æ—Ç–∞, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Ç—Ä–µ—à—Ç–æ–ª–∫ –ª–∏—Å—Ç –∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–º –ø–æ–¥–µ–ª–∏—Ç—Å—è, –ø—Ä–æ—Å—å–±–∞ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –ª—Å(–∫–Ω–æ–ø–∫–∞ –Ω–∏–∂–µ). –í—Å–µ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ.\n\nüìö –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Ä–∞—Å–ø–∏—Å–∞–Ω—ã –≤ –∫–æ–º–∞–Ω–¥–µ /start, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –±–æ—Ç –Ω–µ –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥–µ, —Ç–∞–∫ —á—Ç–æ –µ—Å–ª–∏ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç - –≤–∞–º –ø–æ–≤–µ–∑–ª–æ. –ö–∞–Ω–∞–ª —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏/–Ω–æ–≤–æ—Å—Ç—è–º–∏ - https://t.me/somestuffforu</b>", {
        parse_mode: "HTML",
        reply_markup: {
            inline_keyboard: [
                [{
                    text: "üë∑‚Äç‚ôÇÔ∏è –ö–æ–¥–µ—Ä",
                    url: 'tg://user?id=5305307232'
                }]
            ]
        }
    })
})

bot.on("polling_error", console.log);